-- Accept key from script_key variable
local Script_key = getfenv().script_key or ""

-- Supported game place IDs
local supportedPlaceIds = {
    [2788229376] = true,
    [75899887451121] = true,
    [137022865616421] = true
}

-- Kick if not in a supported game
if not supportedPlaceIds[game.PlaceId] then
    game.Players.LocalPlayer:Kick("❌ Unsupported game\nOnly certain games are supported.")
    return
end

-- Fetch key list from GitHub
local success, response = pcall(function()
    return game:HttpGet("https://raw.githubusercontent.com/jayfrrrr/Storage/refs/heads/main/KeyLoader")
end)

if not success then
    game.Players.LocalPlayer:Kick("❌ Failed to load key list.")
    return
end

-- Parse the key list
local keys = {}
for key in string.gmatch(response, "[^\r\n]+") do
    keys[key] = true
end

-- Validate key input
if Script_key == "" or Script_key == "NONE" then
    game.Players.LocalPlayer:Kick("⚠️ No key entered.")
    return
end

if not keys[Script_key] then
    game.Players.LocalPlayer:Kick("⛔ Invalid key.")
    return
end

loadstring(game:HttpGet("https://raw.githubusercontent.com/jayfrrrr/Launcher/refs/heads/main/VisualLauncher"))()
